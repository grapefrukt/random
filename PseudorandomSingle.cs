using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Threading.Tasks;
using UnityEngine;
using Utilities.GSerialize;
using Debug = UnityEngine.Debug;
using Random = System.Random;

/*
 * Loosely based on https://dota2.gamepedia.com/Random_distribution also using numbers from http://archive.playdota.com/threads/article-pseudo-random-distribution.7993/
 */

namespace Utilities.GRandom {
	[Serializable] [GSerializeInline]
	public class PseudorandomSingle {

		static readonly double[] Lookup = {
			0, 1.5E-06, 6E-06, 1.35E-05, 2.4E-05, 3.75E-05, 5.55E-05, 7.525E-05, 9.99999999999999E-05, 0.00012375,
			.000155, .000187, 0.000222, 0.00026, 0.0003045, 0.000352500000000001, 0.000399999999999999,
			0.000450500000000001, 0.000504, 0.000555749999999999, 0.000615000000000001, 0.000672000000000001, 0.000737,
			0.00081075, 0.000882000000000002, 0.000968749999999998, 0.001027, 0.00111375, 0.001197, 0.00128325, 0.00138,
			0.001457, 0.00156, 0.0016665, 0.00176800000000001, 0.00188125000000001, 0.00199126378836697,
			0.00208016226437419, 0.00218948090424158, 0.00233044037483485, 0.00243526153101731, 0.00255216541514103,
			0.00269237325653783, 0.00282510647101021, 0.00296058666032266, 0.00308753561169234, 0.00321667529728042,
			0.00334797787368304, 0.00349341568142216, 0.00365371124443694, 0.00379208726957439, 0.00393251664608087,
			0.00408797244509258, 0.00425917791912713, 0.00440635650157425, 0.00456923180618689, 0.00472052762657237,
			0.00493071793568321, 0.00508677688530837, 0.0052446788055643, 0.00543439820438578, 0.00561165976701702,
			0.005791188355503, 0.00597295900818004, 0.00615694693916711, 0.00632687753785674, 0.00654797636840645,
			0.00673871916922916, 0.00694858185248456, 0.00712654050357043, 0.00735857138061311, 0.00754040091395888,
			0.00774175570566488, 0.00796336252899044, 0.00820594832788764, 0.00839524021649265, 0.00862396547861682,
			0.0088551015672375, 0.00906912610398919, 0.00932451687865463, 0.00950275184865563, 0.0097223091385447,
			0.0100051670394952, 0.010249804008793, 0.0104756986693274, 0.010724579809082, 0.0109541763806261,
			0.0112072175006051, 0.0114404324492324, 0.0117420506697798, 0.0119568017680685, 0.0122636655119608,
			0.0125046218308503, 0.0127936508151535, 0.0130147327158005, 0.0132605979437268, 0.0136279770693631,
			0.0139023508221272, 0.014129700089915, 0.0144075059185911, 0.0147372495114804, 0.0150194122288585,
			0.0152524755874436, 0.0155894212598865, 0.0159292310742625, 0.0161931370135619, 0.0164583712151816,
			0.0167784159704153, 0.0170737537239454, .0173436170733334, 0.0177247387685115, 0.0180536017112731,
			0.0183006889547642, 0.0186614837029743, 0.0188824693102274, 0.0192186292806731, 0.0196729472677778,
			0.0199851570738155, 0.0202399926493587, 0.0206144380927699, 0.020901477649692, 0.0213105957125415,
			0.021539776819994, 0.021922755656484, 0.022308267051686, 0.022633795980014, 0.022992327560108,
			0.023352847054326, 0.023747339868234, 0.024144291550099, .024511187790381, 0.024847264421220,
			0.025250757415929, 0.025590152888486, 0.0259309370930268, 0.026374346423328, 0.026786617412310,
			0.0270984867315166, 0.027549191190613, 0.0278637177368766, 0.0283190534546833, 0.0286714355650037,
			0.0290606014248913, 0.0294157885269747, 0.0299162344989477, 0.0303474271030615, 0.0305983542356146,
			0.0311797539264445, 0.0314323643384188, 0.0318336737669258, 0.0322366706393658, 0.0325658435146423,
			0.0330856810826526, 0.0335321721637793, 0.0340193057083808, 0.034354070796283, 0.0347674566362699,
			0.0351824525655748, 0.0356780480493712, 0.0361364826802639, 0.0365169961777802, 0.0369388283878607,
			0.0374027192823504, 0.0379501589584899, 0.0382956376384062, 0.038724145668604, 0.0391541735194565,
			0.0395439617846965, 0.0400187511809077, 0.0404955325470151, 0.0408892968437769, 0.0414977851532748,
			0.0419377386784056, 0.0423791487423716, 0.0428220067881722, 0.043353804378095, 0.0437560331932062,
			0.0442919350328422, 0.0449192518141005, 0.0453709755713307, 0.0456440984556254, 0.0461881127343118,
			0.0466435107904416, 0.0471002851222834, 0.0476504283428128, 0.0481566831792039, 0.0486647924723203,
			0.0493149991762055, 0.049686546357575, 0.0500111771953066, 0.0507631349799316, 0.051137413113126,
			0.0516560051072012, 0.0521281545845955, 0.0526016052773647, 0.0531738510266735, 0.0536503857822863,
			0.0541282036020582, 0.0547062986514264, 0.0553364152029008, 0.0557192976355552, 0.0563034404345186,
			0.0567888381904658, 0.0574277355991086, 0.0578653774606872, 0.0585087586794606, 0.0591548742631981,
			0.0594932193226702, 0.0599352890711397, 0.0607438288238528, 0.0611890839975294, 0.0618988001098552,
			0.0623467227789729, 0.0627953477229713, 0.0634586707593793, 0.0639634378046534, 0.0645233948736729,
			0.0649222880792262, 0.0657028636315069, 0.0661586178375999, 0.066725047100977, 0.0672931479209835,
			0.0678629168923338, 0.0685458507045986, 0.0690074461416972, 0.0696384500813906, 0.0701586094947685,
			0.0709069214457449, 0.0713163830905444, 0.0719549916771983, 0.0727107445450303, 0.0731231391241527,
			0.0737096729349528, 0.0745308435875882, 0.0749461487814737, 0.0754790863047766, 0.0763081540339032,
			0.0767853499329945, 0.0775011720534126, 0.0781598685332365, 0.0787006875967482, 0.0791823775539286,
			0.079846186799944, 0.0803906138146415, 0.0810581571620356, 0.0817890654898036, 0.0823995875287726,
			0.0829499720924144, 0.0838114680763327, 0.0842408244577579, 0.0848577902950349, 0.0853508647271155,
			0.0860965469730511, 0.0867183363314797, 0.0875957321801219, 0.0879667339752669, 0.0887213412512684,
			0.0892215536200311, 0.0899158707705057, 0.0906122924681766, 0.0911808185545561, 0.0920114489466719,
			0.0929106836365621, 0.0932217726907624, 0.0939279662498006, 0.0947025145276841, 0.0950806678113949,
			0.0958589264603764, 0.0966397909060289, 0.0974905116511959, 0.0980068392696598, 0.0985915244056289,
			0.0993133177732319, 0.100037220156006, 0.100763232406389, 0.101216355445213, 0.102014590261189,
			0.102676937910406, 0.103271399515816, 0.104076226266727, 0.104673669418293, 0.105553230291009,
			0.106365410270197, 0.1069679608055, 0.107500633410372, 0.108176429661568, 0.108925351198639,
			0.109963399723418, 0.110429576999514, 0.111257134851804, 0.111797325165919, 0.112483649887743,
			0.113390611022895, 0.113861210636228, 0.114625950851315, 0.115614083849942, 0.116013861871598,
			0.116858787212968, 0.117706362227422, 0.118407089324508, 0.119259470969438, 0.119964009682589,
			0.120368208038983, 0.121226568667784, 0.12201159425179, 0.12287503752692, 0.123435151281708,
			0.124302938356793, 0.125096401644409, 0.125814794087878, 0.126457368681102, 0.127256628468051,
			0.128136076542253, 0.128783466046291, 0.129589050171288, 0.130475582156402, 0.131285815288314,
			0.131622752900722, 0.132674398373829, 0.133410755133837, 0.133908826652435, 0.134968866446294,
			0.135710628076554, 0.136534865148317, 0.137280331310138, 0.13810878025351, 0.138613465712383,
			0.139527141462601, 0.14036156132144, 0.140951479147101, 0.1422846488381, 0.14263007433306, 0.14338975960970,
			0.14431770868479, 0.14508142561342, 0.14584691448853, 0.146614179440424, 0.14763597463620, 0.14823855427934,
			0.14909617260910, 0.14987108390006, 0.15064779246161, 0.15151180263742, 0.15246386880494, 0.15307474537491,
			0.15403143679081, 0.154471947528402, 0.1556930320951, 0.15648344502985, 0.15727569090191, 0.15798227431103,
			0.1589534498866, 0.15957547228723, 0.16046309620018, 0.16126457634095, 0.16206791745267, 0.16287312430565,
			0.16359095169688, 0.16448915444946, 0.16538973741215, 0.16611270545884, 0.16692731348804, 0.16810581642237,
			0.168834469208056, 0.16965552681441, 0.17020474423334, 0.17148637647883, 0.17222192858642, 0.17305090561273,
			0.17378956263490, 0.17434465475014, 0.17573493707517, 0.176572164745744, 0.17703834291612, 0.17797197675858,
			0.17928307146288, 0.180128632235773, 0.18069341430049, 0.18173117289623, 0.182771913277652,
			0.18334064071436, 0.18438611049042, 0.185243577903803, 0.186103048265923, 0.18677252690110,
			0.18773176914607, 0.189079530349461, 0.189754565871283, 0.19013963108243, 0.191691231364177,
			0.192273372107641, 0.193149308713305, 0.194027296590491, 0.19471084115685, 0.195887947837882,
			0.19687112206637, 0.197955869281924, 0.198646694930452, 0.199537604463647, 0.200630103338486,
			0.20102569701671, 0.202122640964348, 0.203323190651145, 0.204426601550118, 0.20502812913701,
			0.206136528889794, 0.20714655628816, 0.208057466813007, 0.208562515945933, 0.20968120916873,
			0.21100805196287, 0.211825299808998, 0.212541208186423, 0.213568032572612, 0.214390528442675,
			0.215422201268862, 0.216664556520048, 0.217389349661232, 0.21863783615302, 0.21915677145112,
			0.220095911005834, 0.221353010261547, 0.222086324656218, 0.22324385962087, 0.223768620579088,
			0.2248248629465, 0.226203342130274, 0.226625313528608, 0.227903032530222, 0.228326504513845,
			0.229609734847712, 0.230681228889051, 0.231539491983574, 0.232832529464971, 0.233478346654397,
			0.234451198859966, 0.235426341376241, 0.236403779483727, 0.237055018448357, 0.238255813520989,
			0.239129919936894, 0.240336592915245, 0.241546587658613, 0.242316909352454, 0.243088563164603,
			0.244306554244763, 0.244858887723995, 0.245858568714212, 0.247308602307669, 0.248089493576454,
			0.249209247571975, 0.25010636932446, 0.251005363842439, 0.252132736112243, 0.253262991097484,
			0.254282383738561, 0.255304168952136, 0.256785351630636, 0.257583936641741, 0.25849867882787,
			0.259875333005678, 0.260679653965547, 0.261831896471072, 0.263102815258559, 0.264029165036508,
			0.265189950485111, 0.266120676255741, 0.26740359697044, 0.268221967221413, 0.269159041570522,
			0.270098074548767, 0.27127457065579, 0.271746034359354, 0.272926970094844, 0.274703382264753,
			0.27541652523817, 0.27660665335028, 0.277799770901847, 0.278876382158707, 0.279715991351261,
			0.280797102673966, 0.282000970284822, 0.28284634830487, 0.284055490817675, 0.284783651868823,
			0.285391585465411, 0.287215045575535, 0.288191786127785, 0.289292561010734, 0.290518124072427,
			0.291256729119877, 0.292610129918553, 0.293721080191869, 0.294711333620681, 0.295333143842771,
			0.296698014452344, 0.297942448999517, 0.298568700989805, 0.29944452388362, 0.300820921095763,
			0.30195089599490, 0.30283295190307, 0.30346559209518, 0.30497906979846, 0.30586663819201, 0.3068820504062,
			0.30827905952238, 0.30929941857199, 0.31044888053642, 0.31109194834633, 0.31250062488115, 0.31352966296859,
			0.31481681538413, 0.31572233485052, 0.31701497403724, 0.31792448556003, 0.31935162198035, 0.32052388580490,
			0.32131027948506, 0.32274655541645, 0.32353646593838, 0.32471826333333, 0.32564169982647, 0.32682827758515,
			0.3277554987183, 0.32881561527627, 0.329746379249653, 0.331205792569445, 0.3317448571062, 0.333342074669587,
			0.334015947007883, 0.335885225807459, 0.33696166269228, 0.33897300922338, 0.33978851689839,
			0.34114018715098, 0.34236102135037, 0.34358452080084, 0.34467618674119, 0.346039520344276, 0.34767602271642,
			0.34904619489700, 0.3500130378578, 0.35138880250289, 0.35263173966738, 0.35442235011764, 0.35512563455045,
			0.35665009359252, 0.35804122780002, 0.359023787658061, 0.36042052358016, 0.361820435907783,
			0.363085524909779, 0.36435329078191, 0.36576223364633, 0.36703560355107, 0.36858965046955, 0.36959037430003,
			0.3708717748651, 0.37201610191139, 0.37316260510855, 0.37487228404929, 0.37588363824856, 0.37717816714315,
			0.378052370091125, 0.37991649637135, 0.38121929518300, 0.38252476564499, 0.38340690679553, 0.38457471759156,
			0.386029696908293, 0.38691684353866, 0.38852015619284, 0.3899838834977, 0.3910202739964, 0.39220207614775,
			0.393386038325704, 0.394427908818972, 0.39604943583042, 0.396950867476602, 0.398433451787191,
			0.399773936704539, 0.40126257008312, 0.402025599689078, 0.403519273199627, 0.404869838202627,
			0.405490542196038, 0.407138632587415, 0.408790356693398, 0.40956221173921, 0.410482194858137,
			0.411846553091032, 0.413213533385792, 0.414731382596862, 0.415361347484719, 0.417032674715363,
			0.417813610859809, 0.419490652393582, 0.420124795696201, 0.421807287050676, 0.422893372642995,
			0.423680548561615, 0.42552181079696, 0.426462655240902, 0.428008577686257, 0.42895257382628,
			0.429746139254145, 0.431754269462452, 0.4331589598427, 0.43365270568479, 0.434603502176517,
			0.436777344403051, 0.436814227346436, 0.438381645885084, 0.439952094793254, 0.440603068740552,
			0.442024062291425, 0.442984819904639, 0.443946585932788, 0.445528354621769, 0.446648120110277,
			0.447614126429307, 0.44935861750163, 0.450016337141289, 0.451454029053101, 0.452425436832126,
			0.453554303963182, 0.454998123820318, 0.455816389666308, 0.45710684465216, 0.45808423181658,
			0.459220294085473, 0.460357774271454, 0.461971415073304, 0.462953959075491, 0.463937398747644,
			0.464921726444042, 0.466225434403129, 0.467690514746975, 0.468678709480777, 0.469827760492371,
			0.471138409551688, 0.471969398310264, 0.473282968300743, 0.474437360936334, 0.475915567510344,
			0.476911579195632, 0.478231887044114, 0.479067981986272, 0.480553354830614, 0.481390996263175,
			0.482391646847036, 0.483556047021762, 0.484884937102954, 0.48572505728168, 0.487220397624004,
			0.488061948070481, 0.489232198435628, 0.490239138407399, 0.491082007546734, 0.492915045287002,
			0.493594490933489, 0.494770083662925, 0.495946812522959, 0.497290666431614, 0.498303634176842,
			0.49931720441599, 0.501832115675235, 0.503684106349173, 0.505873664700259, 0.508569778858256,
			0.509426186819816, 0.512130626447924, 0.514840585471347, 0.516882051484213, 0.519433261945443,
			0.520806454178266, 0.523365865369668, 0.526099732569949, 0.528839042692182, 0.529543782511669,
			0.531269438665497, 0.533849997651999, 0.536606195830214, 0.538683769419435, 0.540764704498675,
			0.542677487006128, 0.545451852738715, 0.546683537351547, 0.549294026357391, 0.550701805126216,
			0.553492858884645, 0.555078172715459, 0.55683848155707, 0.559121520203046, 0.561755773301581,
			0.563176725354974, 0.565644360719149, 0.567767163603131, 0.569718368068525, 0.572197208029031,
			0.574154417249924, 0.575587729347533, 0.577900877788757, 0.580217595890539, 0.582185366819352,
			0.583802673590709, 0.585421499068644, 0.587926825965193, 0.589727136839905, 0.592239414099317,
			0.593866889996455, 0.596207796630316, 0.5980173659453, 0.60000732973104, 0.60199966962120, 0.60345736709366,
			0.60599140346968, 0.60727275991342, 0.60927341743145, 0.611096356872276, 0.61256055892576, 0.61492800412267,
			0.616756422834171, 0.61786254527125, 0.620237101484, 0.622433321362529, 0.624086934633508,
			0.625923670862635, 0.627579759452628, 0.629966929643022, 0.631260660509662, 0.633835430964185,
			0.635130969753512, 0.637160505459355, 0.639192016497683, 0.640121481118233, 0.642892377403994,
			0.644191183270696, 0.6462288764663, 0.647898434570501, 0.649013084994202, 0.651796554979014,
			0.652912071596752, 0.655700861748915, 0.657562152166183, 0.659051669407905, 0.661475139861601,
			0.662966289742436, 0.665019345092719, 0.666324031781405, 0.668567075503564, 0.669684201779884,
			0.671741635956172, 0.673423603202826, 0.675106078514331, 0.677167036708768, 0.679607952427278,
			0.679966800133565, 0.682030304113403, 0.683715188474095, 0.685590677143986, 0.687847993871956,
			0.688390362226896, 0.69084000559721, 0.692335647190296, 0.694597010032062, 0.695901316966381,
			0.697972790654604, 0.699084153575058, 0.700579128022515, 0.701688186107694, 0.703760799756763,
			0.706027690710808, 0.707909080525339, 0.708822190569783, 0.710897242026963, 0.712584705892592,
			0.714077552974782, 0.716348753893507, 0.717451279080109, 0.719528348776798, 0.721215183036121,
			0.722314501720472, 0.723608024501567, 0.72588147085996, 0.727566560084502, 0.728661011271852,
			0.730738543325971, 0.7326193749576, 0.734105224683753, 0.735787810827224, 0.737073851516056,
			0.738556564683041, 0.740038168065226, 0.742114879203373, 0.743992915441477, 0.745073743926249,
			0.746750831606597, 0.748427145233134, 0.74930265135765, 0.751176566332628, 0.75284960631071,
			0.754120237244197, 0.755589924884552, 0.757661884781872, 0.759129332284386, 0.760796982537959,
			0.76226155048556, 0.763724500866768, 0.765185798217267, 0.766442656868319, 0.768103290946269,
			0.769965914372042, 0.771827740860614, 0.773077483920515, 0.774324856853326, 0.775774072753159,
			0.777221344506151, 0.778461884789956, 0.780314906073241, 0.781551120615165, 0.783195740464884,
			0.78422147746103, 0.786686043231215, 0.787707149191503, 0.78913800654592, 0.79056657628594,
			0.79199281918997, 0.79341669582284, 0.79463066653530, 0.79604944146352, 0.79746573052857, 0.79950424343589,
			0.80070768967482, 0.80274302851808, 0.80373221902124, 0.805136220022241, 0.80674699014084, 0.8083554877781,
			0.81017167111620, 0.81177574811716, 0.81295642652314, 0.81413366385553, 0.8159404174144, 0.816688894278475,
			0.818067301303724, 0.819442595123735, 0.820814732148762, 0.822183668565307, 0.823336860335619,
			0.825550013197168, 0.826483832662149, 0.827413274016973, 0.829405792321752, 0.830541342409787,
			0.832314878887074, 0.833657356131781, 0.834567228293743, 0.835901949293953, 0.837447972824061,
			0.839206002345847, 0.84009924109073, 0.841850642059254, 0.842951158020568, 0.844047241511934,
			0.845571844838207, 0.846442670071326, 0.848393419049815, 0.849038043378265, 0.850764494426821,
			0.852052223330686, 0.853335680989602, 0.854833068067352, 0.85654508499123, 0.85672243195155,
			0.858425808901143, 0.859687165554824, 0.861163451388898, 0.862635615640665, 0.86388360730787,
			0.864906625148239, 0.86658586767895, 0.867378283176109, 0.869269819674275, 0.870272924965927,
			0.87104904660095, 0.872484381886153, 0.874137127884732, 0.875118981415785, 0.876317639053777,
			0.877956547128052, 0.878922151722324, 0.880105148674141, 0.881729733574415, 0.882902351766896,
			0.884069448347639, 0.885679468164537, 0.886835855816796, 0.887761805654398, 0.888906511777637,
			0.890045418036594, 0.891629468030596, 0.89275710510776, 0.893652772364454, 0.894768162644781,
			0.896556968540094, 0.897207382388468, 0.899666596274208, 0.900531802027306, 0.901617691222981,
			0.902241705181138, 0.903542284965852, 0.90483687138489, 0.905668404989183, 0.907407826072304,
			0.908226074669989, 0.909495590559616, 0.910758813259672, 0.911785932029287, 0.913266135867698,
			0.91451011351373, 0.915286553445321, 0.916516893878996, 0.917509572769331, 0.918957527808495,
			0.920399196425704, 0.921602765786737, 0.922799422793383, 0.923989104082994, 0.924939246027937,
			0.926114534735072, 0.927049656045289, 0.92867679553297, 0.929363638505465, 0.93050962000262,
			0.931648174796254, 0.933013487389617, 0.933902742016941, 0.935018622642893, 0.936361812962055,
			0.937227246398449, 0.938555356105014, 0.939404574963092, 0.940953335581912, 0.942022570298097,
			0.943083711175166, 0.944136690002976, 0.945181438297271, 0.946217887299144, 0.947483467974513,
			0.948503361013652, 0.949752746830657, 0.950755805562923, 0.95175021707067, 0.952735910936419,
			0.954190816464461, 0.955159362680385, 0.956118978330551, 0.957549091881565, 0.958491131519805,
			0.959664275150889, 0.960588200399172, 0.961984334607223, 0.962890104835346, 0.964027687861047,
			0.964673260178525, 0.965792247998182, 0.966902077246099, 0.968244923563521, 0.969093962306365,
			0.969933118544709, 0.971491317062259, 0.972311232355877, 0.973608038635048, 0.974408159821365,
			0.975442019548043, 0.976710291159403, 0.977724647710342, 0.978729011965849, 0.979478306400494,
			0.980707453197907, 0.981681374250268, 0.982644991157811, 0.983598225228315, 0.984787247476577,
			0.985966228623918, 0.986888339097677, 0.987799749030686, 0.988947628260782, 0.989837646330276,
			0.990964472485464, 0.991832775676101, 0.99293822455491, 0.994032987477046, 0.995116982499624,
			0.995941127381179, 0.997003089581171, 0.998054036259469, 0.999093884275855, 1.0016225501895
		};

		SerializableRandom random;

		[SerializeField]
		double accumulator;
		double baseChanceConstant;

		public PseudorandomSingle(double             chance = 0) => SetChance(chance);
		public PseudorandomSingle(SerializableRandom newRandom, double chance) => Set(chance, newRandom);
		public void SetChance(double                 chance)    => baseChanceConstant = CalculateProbabilityConstant(chance);
		public void SetRandom(SerializableRandom     newRandom) => random = newRandom;

		public void Set(double chance, SerializableRandom newRandom) {
			SetChance(chance);
			SetRandom(newRandom);
		}

		public bool Roll() {
			accumulator += baseChanceConstant;
			var result = random.NextDouble() < accumulator;
			if (result) Reset();
			return result;
		}

		public bool RollConditional(bool canRoll) {
			if (canRoll && baseChanceConstant > 0) return Roll();
			MissRoll();
			return false;
		}

		public void MissRoll() {
			accumulator += baseChanceConstant;
		}

		public void Reset() => accumulator = 0;

		static double CalculateProbabilityConstant(double probability) {
			if (probability < 0) probability = 0;
			if (probability > 1) probability = 1;
			return Lookup[(int) Math.Round(probability * 1000)];
		}

		/*public static IEnumerator TestBatch() {
			var s = new Stopwatch();
			s.Start();
			
			Debug.Log("batch test started");
			
			var step = 0;
			var chance = 0.0;
			const double stepSize = 0.001;
			const int iterations = 1000000;
			
			var tasks = new List<Task<string>>();
			while (chance < 1) {
				chance =  stepSize * step;
				var chance1 = chance;
				tasks.Add(Task.Run(() => Test(chance1, iterations)));
				step++;

				if (step % 2 == 0) Debug.Log(chance);
			}

			var numCompleted = 0;
			while (numCompleted < tasks.Count) {
				numCompleted = 0;
				foreach (var task in tasks) if (task.IsCompleted) numCompleted++;
				Debug.Log($"{numCompleted} tasks (of {tasks.Count}) completed...");
				yield return new WaitForSeconds(1);
			}

			using (var outputFile = new StreamWriter("pseudotest.csv", false)) {
				outputFile.WriteLine("chance	actual	diff	t-const	o-const	iterations");
				foreach (var task in tasks) outputFile.WriteLine(task.Result);
			}

			Debug.Log("batch test completed in: " + s.ElapsedMilliseconds + "ms");
		}
		
		static string Test(double chance = .25f, int rolls = 100000000) {
			var prs = new PseudorandomSingle(chance);
			prs.SetRandom(new SerializableRandom());

			var iterations = 0;
			double effectiveRatio = 0;
			
			while (iterations++ < 100) {
				var hits = 0;
				for (var i = 0; i < rolls; i++) {
					if (prs.Roll()) hits++;
				}

				effectiveRatio = (double) hits / rolls;

				var diff = chance - effectiveRatio;
				if (Math.Abs(diff) < .0001) {
					break;
				}

				if (diff < 0) {
					prs.baseChanceConstant -= chance * .00025;
				} else {
					prs.baseChanceConstant += chance * .00025;
				}

				prs.Reset();
			}
			
			return
				$"{chance:0.0000}\t{effectiveRatio:0.0000}\t{chance - effectiveRatio:0.000}\t{prs.baseChanceConstant}\t{CalculateProbabilityConstant(chance):0.0000}\t{iterations}";
		}*/
	}
}